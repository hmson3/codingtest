// https://taehun0933.tistory.com/18
/*
예를 들어 [1, 3, 4, 7, 8]로 구성된 수열에서 3개의 원소를 선택하는 조합의 경우, 이를 위한 보조 수열은 [0, 0, 0, 1, 1]이 될 것이다.
중복된 수가 존재하는 보조 수열로 next_permutation을 수행할 경우 가능한 경우의 수는 5!가 아닌 (5! / (3! * 2!))가 될 것이고, 
각각의 순열을 순회하며 0값을 가질 경우, 
해당 인덱스에 해당하는 원본 수열의 값을 더해 준 후 출력하면 된다.

{0, 0, 0, 1, 1} => {1, 3, 4}
{0, 0, 1, 0, 1} => {1, 3, 7}
{0, 0, 1, 1, 0} => {1, 3, 8}
{0, 1, 0, 0, 1} => {1, 4, 7}
{0, 1, 0, 1, 0} => {1, 4, 8}
{0, 1, 1, 0, 0} => {1, 7, 8}
{1, 0, 0, 0, 1} => {3, 4, 7}
{1, 0, 0, 1, 0} => {3, 4, 8}
{1, 0, 1, 0, 0} => {3, 7, 8}
{1, 1, 0, 0, 0} => {4, 7, 8}
*/

#include <bits/stdc++.h>
using namespace std;

int N, M;
vector<int> a;

int main(void){
  ios::sync_with_stdio(0);
  cin.tie(0);
  cin >> N >> M;
  // M의 개수만큼 0을 넣어줌
  for(int i = 0; i < N; ++i)  a.push_back(i < M ? 0 : 1);
  do{
    for(int i = 0; i < N; ++i)
      if(a[i] == 0) cout << i+1 << ' ';
    cout << '\n';
  }while(next_permutation(a.begin(), a.end()));
}